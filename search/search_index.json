{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Flakes!","text":""},{"location":"#what-this-is","title":"What this is","text":"<p>Flakes is the definitive web framework for building web applications in Python. It takes inspiration from other web frameworks such as NextJS, Svelte/SvelteKit, and even some Python web frameworks such as FastHTML.</p> <p>With Flakes, you can create fast, reactive, scaleable web applications in a syntax, which is nearly identical to Python, requirng minimal effort to learn, allowing you to spend more time coding.</p>"},{"location":"#core-features","title":"Core Features","text":"<ul> <li> <p> Written In Python</p> <p>Install <code>flakes</code> with <code>pip</code>, or your prefered package manager, and get up and running in minutes.</p> <p> Installation</p> </li> <li> <p> Blazingly Fast</p> <p>The dev server has a build time of around 100ms, blazingly fast, while still not comprimising quality.</p> <p> Reference</p> </li> <li> <p> Made to measure</p> <p>Change the colors, fonts, language, icons, logo and more with a few lines</p> <p> Customization</p> </li> <li> <p> Open Source, MIT</p> <p>Material for MkDocs is licensed under MIT and available on [GitHub]</p> <p> License</p> </li> </ul>"},{"location":"#project-background","title":"Project Background","text":"<p>Document is a WIP</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"intro/getting-started/","title":"Getting Started","text":"<p>In this section, you will start to create your Flakes web application.</p>"},{"location":"intro/getting-started/#cli","title":"CLI","text":"<p>There are some basic templates we have prepared.</p>"},{"location":"intro/installation/","title":"Flakes Installation","text":"<p>The first step of using any piece of software is to install it properly. Let's take a look at how to do this:</p>"},{"location":"intro/installation/#dependencies","title":"Dependencies","text":"<ul> <li>Flakes is written in, and thus required Python V3.13 or newer. We are currently working on backwards compatibility, but recommend the latest stable version of Python.</li> <li>With Python, will come <code>pip</code>, Pythons default package manager. This is required to install Flakes, but you can use another <code>pip</code>-based package manager. (E.g. <code>Pipenv</code>, <code>pipx</code>, ect..)</li> <li>Additionally, you should also be familiar with working from the command line, and have a text editor to use. Notepad does not count as a text editor, we recommend Visual Studio Code.</li> </ul> <p>Tip</p> <p>Check your Python and <code>pip</code> versions with the following commands: <code>python -v</code>, and <code>pip -v</code>.</p>"},{"location":"intro/installation/#distributions","title":"Distributions","text":"<p>Upon installing Flakes, you should know there are several packages that come budled with it. These are:</p> <ul> <li>Requests, for helping with HTTPS requests. (Duh)</li> <li>Jinja2, a popular Python templating engine.</li> </ul>"},{"location":"intro/installation/#virtual-enviroments","title":"Virtual Enviroments","text":"<p>We highly recommend the use of Python Virtual Enviroments when installing packages. This way, project dependencies are managed automatically, both in development and production.</p>"},{"location":"intro/installation/#install-flakes","title":"Install Flakes","text":"<p>Now that you have gone through all of these steps, finally, you can install Flakes.</p> <pre><code>pip install flakes\n</code></pre>"},{"location":"intro/quickstart/","title":"Quickstart","text":"<p>A simple 5 minute fast paced course for those who wish to jump right in. This is intended to be a refresher in case you might have forgotten some of the basics, but if you are a beginner, we recommend checking out the tutorial.</p>"},{"location":"intro/quickstart/#1-installation","title":"1. Installation","text":"<p>Install Flakes through <code>pip</code> by running the following command:</p> <pre><code>pip install flakes\n</code></pre> <p>Afterwards, we suggest running the command <code>flake mkdir app.py</code>. This will create a file named <code>app.py</code> at the base of your directory.</p>"},{"location":"intro/quickstart/#2-setting-up-the-application","title":"2. Setting up the application","text":"<p>The simplest and most basic code rerquired to create a application is as follows:</p> <pre><code>from flakes import flakes\n\napp = My first application\n\n@app.route(\"/\")\ndef hello_world():\n    print(\"Hello World\")\n</code></pre> <p>Afterwrads, open up a terminal, and enter <pre><code>flakes run\n</code></pre> to start a local server at http://127.0.0.1:8000. There, you will see your text, \"hello world\".</p>"},{"location":"intro/quickstart/#3-explanation","title":"3. Explanation","text":"<p>So what did this do? Let's break it down:</p> <ol> <li><code>from flakes import flakes</code> imports the Flakes library, which is a necessity.</li> <li><code>app = My first application</code> creates a title for our document.</li> <li>The entirety of the <code>@app.route</code> section was defining a variable, telling Flakes to render it through the <code>app</code> route, and display it to us.</li> <li>Starting a local server allows us to see our works while coding. The server includes hot-refresh, so everytime you save your changes, it will refresh.</li> </ol>"},{"location":"intro/quickstart/#4-next-steps","title":"4. Next Steps","text":"<p>After going through the quickstart, I highly recommend going through the tutorial if you have not, or checking out the other Documents in the Introduction section.</p>"},{"location":"tutorial/","title":"Learn Flask","text":"<p>Learn the very basics of Flask.</p>"}]}